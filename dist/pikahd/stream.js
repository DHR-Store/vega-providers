"use strict";async function getStream({link:link,signal:signal,providerContext:providerContext}){const{axios:axios,cheerio:cheerio,commonHeaders:headers}=providerContext;try{const res=await axios.get(link,{headers:headers,signal:signal}),$=cheerio.load(res.data),container=$("article, .entry-content").first(),streamLinks=[],downloadLinks=[],seen=new Set;$("iframe",container).each((_,el)=>{const src=$(el).attr("src")||$(el).attr("data-litespeed-src");if(!src)return;const finalLink=src.startsWith("http")?src:new URL(src,link).href;seen.has(finalLink)||(seen.add(finalLink),streamLinks.push({title:"Iframe Stream",link:finalLink,type:"stream"}))}),container.find('h3 a[href*="links.kmhd.net"]').each((_,el)=>{const href=$(el).attr("href");if(!href)return;const finalLink=href.startsWith("http")?href:new URL(href,link).href;if(seen.has(finalLink))return;seen.add(finalLink);const linkText=$(el).text().trim(),qualityMatch=linkText.match(/(1080p|720p|480p)/i),quality=qualityMatch?qualityMatch[0]:"HD";downloadLinks.push({title:linkText,link:finalLink,type:"download",quality:quality})});const scripts=$("script",container).map((i,el)=>$(el).html()).get().join(" ");if(scripts){const regex=/https?:\/\/[^\s'"]+\.(mp4|m3u8)/gi,jsMatches=scripts.match(regex);jsMatches&&jsMatches.forEach(matchUrl=>{seen.has(matchUrl)||(seen.add(matchUrl),streamLinks.push({title:"Script Stream",link:matchUrl,type:"stream"}))})}return{streamLinks:streamLinks,downloadLinks:downloadLinks}}catch(err){return{streamLinks:[],downloadLinks:[]}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;