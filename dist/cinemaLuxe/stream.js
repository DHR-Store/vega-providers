"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=void 0;const getStream=_a=>__awaiter(void 0,[_a],void 0,function*({link:link,type:type,signal:signal,providerContext:providerContext}){var _b,_c,_d;try{let newLink=link;const log=(...args)=>{};log("initial link",link);const base=(yield null===(_b=providerContext.getBaseUrl)||void 0===_b?void 0:_b.call(providerContext,"cinemalux"))||"https://cinemalux.run";newLink.startsWith("/")&&(newLink=base.replace(/\/$/,"")+newLink);const res=yield providerContext.axios.get(newLink,{signal:signal}),hubMatch=(res.data||"").match(/https?:\/\/[^'"\s]+(?:hubcloud|hubdrive|luxedrive|drive|gdflix|gdrv|googleapis|drive\.google\.com)[^'"\s]*/i);if(hubMatch){const hubLink=hubMatch[0];if(log("found hub-like link",hubLink),hubLink.includes("gdflix")&&(null===(_c=providerContext.extractors)||void 0===_c?void 0:_c.gdFlixExtracter))return yield providerContext.extractors.gdFlixExtracter(hubLink,signal);if(null===(_d=providerContext.extractors)||void 0===_d?void 0:_d.hubcloudExtracter)return yield providerContext.extractors.hubcloudExtracter(hubLink,signal)}if(providerContext.extractors&&"genericExtractor"in providerContext.extractors){const extractor=providerContext.extractors.genericExtractor;if("function"==typeof extractor){const generic=yield extractor(newLink,signal);if(generic&&generic.length)return generic}}log("No extractor matched, fallback to direct link:",newLink);return[{link:newLink,quality:["360","480","720","1080","2160","auto"].includes(type||"auto")?type:"auto",type:"url"}]}catch(err){return[]}});exports.getStream=getStream;
