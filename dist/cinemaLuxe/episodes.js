"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEpisodes=void 0;const getEpisodes=function(_a){return __awaiter(this,arguments,void 0,function*({url:url,providerContext:providerContext}){try{const res=yield providerContext.axios.get(url,{headers:providerContext.commonHeaders}),$=providerContext.cheerio.load(res.data||""),episodeLinks=[];return $("a, .download-links a, .episodes a, .links a, .entry-content a").each((i,el)=>{const $el=$(el);let title=$el.text().trim()||$el.attr("title")||"";const link=$el.attr("href")||"";link&&(title.toLowerCase().includes("zip")||title.toLowerCase().includes("batch")||(title=title.replace(/\s+Download\s*/i,"").replace(/\(\d{4}\)/,"").trim(),episodeLinks.push({title:title,link:link})))}),episodeLinks.length||$(".btn, .dl-btn, .download a").each((i,el)=>{const $el=$(el),title=$el.text().trim(),link=$el.attr("href")||"";link&&!title.toLowerCase().includes("zip")&&episodeLinks.push({title:title,link:link})}),episodeLinks}catch(err){return[]}})};exports.getEpisodes=getEpisodes;
