"use strict";async function getEpisodeLinks({url:url,providerContext:providerContext}){try{const res=await providerContext.axios.get(url),$=providerContext.cheerio.load(res.data||""),episodes=[];return $("h3").each((_,h3El)=>{const aTag=$(h3El).find("a[href]");aTag.length&&aTag.each((_,aEl)=>{var _a;const rawHref=$(aEl).attr("href");if(!rawHref)return;let href=rawHref.trim();if(!href)return;href.startsWith("http")||(href=new URL(href,url).href);const title=(null===(_a=$(aEl).text())||void 0===_a?void 0:_a.trim())||"Episode";episodes.push({title:title,link:href})})}),episodes.sort((a,b)=>{var _a,_b;return parseInt((null===(_a=a.title.match(/\d+/))||void 0===_a?void 0:_a[0])||"0")-parseInt((null===(_b=b.title.match(/\d+/))||void 0===_b?void 0:_b[0])||"0")}),episodes}catch(err){return[]}}async function getEpisodes({url:url,providerContext:providerContext}){return await getEpisodeLinks({url:url,providerContext:providerContext})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEpisodeLinks=getEpisodeLinks,exports.getEpisodes=getEpisodes;