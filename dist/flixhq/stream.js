"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","Cache-Control":"no-store","Accept-Language":"en-US,en;q=0.9",DNT:"1","sec-ch-ua":'"Not_A Brand";v="8", "Chromium";v="120", "Microsoft Edge";v="120"',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":'"Windows"',"Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Sec-Fetch-Site":"none","Sec-Fetch-User":"?1",Cookie:"xla=s4t; _ga=GA1.1.1081149560.1756378968; _ga_BLZGKYN5PF=GS2.1.s1756378968$o1$g1$t1756378984$j44$l0$h0","Upgrade-Insecure-Requests":"1","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0"};async function getStream({link:link,type:type,signal:signal,providerContext:providerContext}){var _a,_b,_c,_d;const{axios:axios,cheerio:cheerio}=providerContext;try{const streamLinks=[],dotlinkText=(await axios(link,{headers:headers,signal:signal})).data,$=cheerio.load(dotlinkText);try{const gdflixLink=$('a[href*="gdflix.dev"] button:contains("GDFlix")').first().parent().attr("href");gdflixLink&&streamLinks.push({server:"GDFlix (G-Direct Download)",link:gdflixLink,type:"download"})}catch(error){}try{const filepressLink=$('.btn.btn-sm.btn-outline[style="background:linear-gradient(135deg,rgb(252,185,0) 0%,rgb(0,0,0)); color: #fdf8f2;"]').parent().attr("href");if(filepressLink&&filepressLink.includes("filepress")){const filepressID=null==filepressLink?void 0:filepressLink.split("/").pop(),filepressBaseUrl=null==filepressLink?void 0:filepressLink.split("/").slice(0,-2).join("/");if(filepressID&&filepressBaseUrl){const filepressTokenRes=await axios.post(`${filepressBaseUrl}/api/file/downlaod/`,{id:filepressID,method:"indexDownlaod",captchaValue:null},{headers:{"Content-Type":"application/json",Referer:filepressBaseUrl},signal:signal});if((null===(_a=filepressTokenRes.data)||void 0===_a?void 0:_a.status)&&(null===(_b=filepressTokenRes.data)||void 0===_b?void 0:_b.data)){const filepressToken=filepressTokenRes.data.data,filepressStreamLinkRes=await axios.post(`${filepressBaseUrl}/api/file/downlaod2/`,{id:filepressToken,method:"indexDownlaod",captchaValue:null},{headers:{"Content-Type":"application/json",Referer:filepressBaseUrl},signal:signal});(null===(_d=null===(_c=filepressStreamLinkRes.data)||void 0===_c?void 0:_c.data)||void 0===_d?void 0:_d[0])&&streamLinks.push({server:"Filepress (Direct Download)",link:filepressStreamLinkRes.data.data[0],type:"mkv"})}}}}catch(error){}return streamLinks}catch(error){return error.message.includes("Aborted"),[]}}